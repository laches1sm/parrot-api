// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// parrot client
//
// Command:
// $ goa gen github.com/bdna/the_parrot_api/design

package parrotsvc

import (
	"context"

	goa "goa.design/goa"
)

// Client is the "parrot" service client.
type Client struct {
	AddParrotEndpoint goa.Endpoint
}

// NewClient initializes a "parrot" service client given the endpoints.
func NewClient(addParrot goa.Endpoint) *Client {
	return &Client{
		AddParrotEndpoint: addParrot,
	}
}

// AddParrot calls the "add-parrot" endpoint of the "parrot" service.
func (c *Client) AddParrot(ctx context.Context, p *AddParrotPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.AddParrotEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}
